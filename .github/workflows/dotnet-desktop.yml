name: CI

on:
  push:
    branches:
      - master
      - legacy
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x' # Specify the version you need

      - name: Calculate Version Number
        id: version
        run: |
          # Extract the latest commit SHA and use it to create a unique build number
          BUILD_NUMBER=$(echo "${GITHUB_RUN_NUMBER}")
          VERSION="3.0.$BUILD_NUMBER"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Install Coverlet
        run: dotnet add src/SignhostAPIClient.Tests/SignhostAPIClient.Tests.csproj package coverlet.msbuild --version 3.1.0

      - name: Restore dependencies
        run: dotnet restore src/SignhostAPIClient.sln

      - name: Build
        run: dotnet build src/SignhostAPIClient.sln

      - name: Pack
        run: dotnet pack src/SignhostAPIClient/SignhostAPIClient.csproj /p:Version=${{ env.VERSION }}

      - name: Test
        run: dotnet test --no-build src/SignhostAPIClient.Tests/SignhostAPIClient.Tests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput="./result.cover" /p:Exclude="[xunit*]*"

      - name: Upload NuGet Package
        uses: actions/upload-artifact@v3
        with:
          name: Nuget
          path: '**/*.nupkg'

      - name: Notify
        uses: actions/http-client@v3
        with:
          url: https://webhooks.gitter.im/e/69c5136a745342743ec4
          method: POST
          headers: |
            Content-Type: application/json
          body: |
            { "text": "CI build completed successfully with version ${{ env.VERSION }}" }
