name: CI

on:
  push:
  pull_request_target:

jobs:
  build:
    runs-on: windows-latest

    env:
      SH_VERSION_SUFFIX: preview

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Get Latest NuGet VersionPreview
        id: get_version
        run: |
              # Get the latest NuGet version including '-preview'
              VERSION=$(curl -sL "https://api.nuget.org/v3/registration5-gz-semver2/entrustsignhostclientlibrary/index.json" | gunzip -c | jq -r '.items[].items[].catalogEntry.version' | sort -V | tail -n 1)

              # Print the current latest version
              echo "Latest version (including preview): $VERSION"

              # Split the version into major, minor, and patch parts
              IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"

              # Increment the patch version (the third component)
              PATCH_VERSION=${VERSION_PARTS[2]}
              PATCH_VERSION=$((PATCH_VERSION + 1))

              # Recombine the version (major.minor.patch)
              NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION-preview"

              # Set the new version as the environment variable
              echo "LATEST_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

              # Print the new incremented version
              echo "Incremented version: $NEW_VERSION"
        shell: bash

      - name: Clear NuGet Cache
        run: dotnet nuget locals all --clear

      - name: Install Coverlet
        run: dotnet add src/SignhostAPIClient.Tests/SignhostAPIClient.Tests.csproj package coverlet.msbuild --version 3.1.0

      - name: Restore NuGet packages
        run: dotnet restore src/SignhostAPIClient.sln

      - name: Build solution
        run: dotnet build src/SignhostAPIClient.sln -c release

      - name: Test with Coverage
        run: dotnet test --no-build src/SignhostAPIClient.Tests/SignhostAPIClient.Tests.csproj --collect:"XPlat Code Coverage" -c Release

      - name: Pack
        run: dotnet pack src/SignhostAPIClient/SignhostAPIClient.csproj /p:Version=${{ env.LATEST_VERSION }}

      - name: Upload NuGet Package
        uses: actions/upload-artifact@v3
        with:
          name: Nuget
          path: '**/*.nupkg'

      # - name: Publish NuGet Package
      #   run: |
      #     dotnet nuget push '**/*.nupkg' --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json
      #   env:
      #     NUGET_API_KEY: ${{ secrets.NUGET_KEY }}
         # Testing if the secret is available (safe way to verify)
      - name: Print a masked version of the secret
        run: |
           # Print only the first 4 characters of the secret and mask the rest
           echo "NuGet API Key (masked): ${NUGET_API_KEY:0:4}****"
        env:
           NUGET_API_KEY: ${{ secrets.NUGET_KEY }}

