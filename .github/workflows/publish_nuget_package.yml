name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    env:
      SH_VERSION_SUFFIX: preview

    steps:
      - name: Checkout repository
        uses:  actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Fetch The Tag
        run: |
          # Fetch all tags from the remote repository
          git fetch https://github.com/Evidos/SignhostClientLibrary.git --tags

          # Get the most recent tag based on the commit date
          LATEST_TAG=$(git tag --sort=-creatordate | head -n 1)

          # If the tag contains a "v", remove it to get the version (if needed)
          VERSION=${LATEST_TAG#v}

          # Set the version as an environment variable for subsequent steps
          echo "LATEST_VERSION=${VERSION}" >> $GITHUB_ENV

          # Print the version for debugging
          echo "Version ${VERSION}"
        shell: bash

      - name: Clear NuGet Cache
        run: dotnet nuget locals all --clear

      - name: Install Coverlet
        run: dotnet add src/SignhostAPIClient.Tests/SignhostAPIClient.Tests.csproj package coverlet.msbuild --version 3.1.0

      - name: Restore NuGet packages
        run: dotnet restore src/SignhostAPIClient.sln

      - name: Build solution
        run: dotnet build src/SignhostAPIClient.sln -c release

      - name: Test with Coverage
        run: dotnet test --no-build src/SignhostAPIClient.Tests/SignhostAPIClient.Tests.csproj --collect:"XPlat Code Coverage" -c Release

      # - name: Pack
      #   run: dotnet pack src/SignhostAPIClient/SignhostAPIClient.csproj /p:Version=${{ env.LATEST_VERSION }}
      #   if: ${{ github.event.pull_request.head.repo.fork == false}}

      # - name: Upload NuGet Package
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Nuget
      #     path: '**/*.nupkg'
      #   if: ${{ github.event.pull_request.head.repo.fork == false}}

      # - name: Publish NuGet Package
      #   run: |
      #     dotnet nuget push '**/*.nupkg' --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json
      #   env:
      #     NUGET_API_KEY: ${{ secrets.NUGET_KEY }}
      #   if: ${{ github.event.pull_request.head.repo.fork == false}}
